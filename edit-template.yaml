apiVersion: witboost.com/v1
kind: EditTemplate
metadata:
  name: edit-confluent-kafka-output-port-template.0
  title: Confluent Kafka Output Port Edit Template
  description: Edit a Confluent Kafka Output Port
  tags:
    - edit
    - output-port
    - confluent
    - kafka
spec:
  owner: agilelab
  useCaseTemplateId:
    - urn:dmb:utm:confluent-kafka-outputport-template:0.0.0
  parameters:
    - title: Update Confluent Kafka Output Port
      description: |
        This wizard will allow you to edit the metadata for a previously created Confluent Kafka Output Port.
        
        Most metadata is editable but some (like the name, domain, parent, etc) are not; their fields will be read-only.
        
        Some of the files in the component's repository cannot be updated by this wizard, namely:
        - **Documentation**: `README.md`, `docs/index.md`, etc
        - **CI/CD**: `.gitlab-ci-yaml`
        You need to take care of updating these yourself, as given their nature it's hard to do automatically and they are often edited manually after the component's creation.

    - title: Update component metadata
      description: Update basic information for this component
      required:
        - description
      properties:
        name:
          title: Name
          type: string
          description: Not editable. The name of the component.
          ui:disabled: true
        description:
          title: Description
          type: string
          description: Required. Help others understand what this component is for. What data will it expose?
        domain:
          title: Domain
          type: string
          description: Not editable. Domain of the System this component belongs to.
          ui:field: EntityPicker
          ui:options:
            allowArbitraryValues: false
            allowedKinds:
              - Domain
          ui:disabled: true
        parentRef:
          title: Parent
          type: string
          description: Not editable. Parent system this component belongs to.
          ui:field: EntityPicker
          ui:filter:
            - fieldName: domain
              entityPath: spec.domain
          ui:options:
            allowArbitraryValues: false
            allowedKinds:
              - System
          ui:disabled: true
        identifier:
          title: Identifier
          type: string
          description: Not editable. Autogenerated from the information above. A unique identifier for the component.
          ui:disabled: true
        owner:
          title: Owner
          type: string
          description: Automatically selected from the System metadata.
          ui:field: EntitySelectionPicker
          ui:fieldName: parentRef
          ui:property: spec.owner
          ui:options:
            allowArbitraryValues: false
        dependsOn:
          title: Dependencies
          type: array
          description: A component could depend on other components in the same System. This information will be used to deploy the components in such an order that their dependencies already exist.
          default: [ ]
          items:
            type: string
            ui:field: EntityRelationsPicker
            ui:fieldName: parentRef
            relation: hasPart
        tags:
          title: Tags
          type: array
          description: Tags for the component
          default: []
          items:
            type: string

    - title: Update Terms & Conditions and SLA
      description: Update Terms & Conditions and Service Level Agreement information for this Data product.
      required:
        - termsAndConditions
        - intervalOfChange
        - timeliness
        - upTime
      properties:
        termsAndConditions:
          title: Terms and Conditions
          type: string
          description: Required. Terms and Conditions that apply to the data.
          default: Can be used for production purposes.
        intervalOfChange:
          title: Interval of change
          type: string
          description: Required. How often the data is refreshed.
          default: 2BD
        timeliness:
          title: Timeliness
          type: string
          description: Required. Timeliness of the data.
          default: 2BD
        upTime:
          title: Uptime
          type: string
          description: Required. Uptime of the Output Port.
          default: 99.9%

    - title: Update Data Sharing Agreement
      description: Update the Data Sharing Agreement clauses for this Data product.
      required:
        - purpose
        - billing
        - security
        - intendedUsage
        - limitations
        - lifeCycle
        - confidentiality
      properties:
        purpose:
          title: Purpose
          type: string
          description: Required. Purpose of the data.
          default: Foundational data for downstream sue cases.
        billing:
          title: Billing
          type: string
          description: Required. Billing applied to data usage.
          default: None.
        security:
          title: Security
          type: string
          description: Required. Security policies that apply to the data.
          default: Platform standard security policies.
        intendedUsage:
          title: Intended Usage
          type: string
          description: Required. Intended usage for the data.
          default: Any downstream use cases.
        limitations:
          title: Limitations
          type: string
          description: Required. Limitations of the data.
          default: Needs joining with other datasets (eg customer data) for most analytical use cases.
        lifeCycle:
          title: Lifecycle
          type: string
          description: Required. Lifecycle of the data.
          default: Data loaded every two days and typically never deleted.
        confidentiality:
          title: Confidentiality
          type: string
          description: Required. Confidentiality of the data.
          default: None.

    - title: Update Output port deployment information
      description: Topic properties. Name is computed automatically based on domain, parent system, component name and environment.
      required:
        - numPartitions
      properties:
        numPartitions:
          title: Number of partitions
          type: number
          minimum: 1
          description: The number of Kafka partitions.
          default: 1
        replicationFactor:
          title: Topic replication factor
          type: number
          description: Kafka replicates the event log for each topicâ€™s partitions across a configurable number of servers. This replication factor is configured at the topic level, and the unit of replication is the topic partition. This enables automatic failover to these replicas when a server in the cluster fails so messages remain available.
          ui:disabled: true

    - title: Update Advanced settings
      properties:
        enableAdvancedSettings:
          type: boolean
          title: Enable Advanced Settings
          default: false
      allOf:
        - if:
            properties:
              enableAdvancedSettings:
                const: true
          then:
            properties:
              advancedSettings:
                title: Advanced settings
                type: array
                minItems: 1
                items:
                  type: object
                  ui:ObjectFieldTemplate: HorizontalTemplate
                  ui:options:
                    elementsPerRow: 2                  
                  required:
                    - key
                    - value
                  properties:
                    key:
                      title: Property Key
                      type: string
                    value:
                      title: Property Value
                      type: string
            required:
              - advancedSettings

    - title: Update Message Value Schema
      description: Definition of the message value schema.
      properties:
        enableMessageValueSchema:
          type: boolean
          title: Enable definition for Message Value Schema
          default: false
      allOf:
        - if:
            properties:
              enableMessageValueSchema:
                const: true
          then:
            required:
              - messageValueSchemaType
              - messageValueSchemaDefinition
            properties:
              messageValueSchemaType:
                title: Schema Type
                type: string
                description: The schema type.
                enum:
                  - JSON
                  - AVRO
                enumNames:
                  - JSON Schema
                  - Avro
              messageValueSchemaDefinition:
                title: Schema Definition
                type: string
                description: The schema definition.
                ui:options:
                  multiline: true
                  rows: 25
                ui:style:
                  font-family: Consolas
                  color: "#111"

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./edit-skeleton
        targetPath: '.'
        values:
          description: '${{ parameters.description }}'
          dependsOn: '${{ parameters.dependsOn }}'
          tags: '${{ parameters.tags }}'
          termsAndConditions: '${{ parameters.termsAndConditions }}'
          intervalOfChange: '${{ parameters.intervalOfChange }}'
          timeliness: '${{ parameters.timeliness }}'
          upTime: '${{ parameters.upTime }}'
          purpose: '${{ parameters.purpose }}'
          billing: '${{ parameters.billing }}'
          security: '${{ parameters.security }}'
          intendedUsage: '${{ parameters.intendedUsage }}'
          limitations: '${{ parameters.limitations }}'
          lifeCycle: '${{ parameters.lifeCycle }}'
          confidentiality: '${{ parameters.confidentiality }}'
          numPartitions: ${{ parameters.numPartitions }}
          enableAdvancedSettings: ${{ parameters.enableAdvancedSettings }}
          advancedSettings: ${{ parameters.advancedSettings }}
          enableMessageValueSchema: ${{ parameters.enableMessageValueSchema }}
          messageValueSchemaType: ${{ parameters.messageValueSchemaType }}
          messageValueSchemaDefinition: ${{ parameters.messageValueSchemaDefinition | dump }}
